SELECT winame,         'LEA' AS ModuleID,         'A' AS TXNTYPE,         'LS' AS BPTYPE,         '0' AS DEFCHARGERATE,         '0' AS DEFCHARGEAMT,         CASE             WHEN NewRowNum = 1 THEN '0'             WHEN NewRowNum = 2 THEN '0'             WHEN NewRowNum = 3 THEN ''         END AS ChargeRate,         CASE             WHEN NewRowNum = 1 THEN LoanAmount             WHEN NewRowNum = 2 THEN InterestRate             WHEN NewRowNum = 3 THEN ProcessingFee         END AS ChargeAmt,         'N' AS AdviceGenFlag,         'N' AS ADVICE,         'A' AS Status,         CASE             WHEN NewRowNum = 1 THEN 'P'             WHEN NewRowNum = 2 THEN 'R'             WHEN NewRowNum = 3 THEN 'R'         END AS RCPTPMNTFLG,         CASE             WHEN NewRowNum = 1 THEN '2'             WHEN NewRowNum = 2 THEN '19'             WHEN NewRowNum = 3 THEN '35'         END AS CHARGECODEID,         CASE             WHEN NewRowNum = 1 THEN 'Loan Disbursed'             WHEN NewRowNum = 2 THEN 'Finance Charges'             WHEN NewRowNum = 3 THEN 'Loan Processing Fee'         END AS CHARGEDESC,         'AED' AS CurrencyID,         '24' AS PRODUCTID,         '8' AS BRANCHID,         SUBSTRING(winame, 11, 10) AS NewgenAppID,         CONVERT(NVARCHAR, GETDATE(), 6) AS CurrentDate  FROM (      SELECT           winame,           LoanAmount,    InterestRate,    ProcessingFee,          ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS NewRowNum      FROM           (SELECT           winame,           LoanAmount,    InterestRate,    ProcessingFee from NG_DPL_EXTTABLE where WINAME ='#WINAME#'    UNION ALL    SELECT           winame,           LoanAmount,    InterestRate,    ProcessingFee from NG_DPL_EXTTABLE where WINAME ='#WINAME#'    UNION ALL    SELECT           winame,           LoanAmount,    InterestRate,    ProcessingFee from NG_DPL_EXTTABLE where WINAME ='#WINAME#') as Filtered   ) AS NumberedRecords  





USE [rakcas]
GO
/****** Object:  StoredProcedure [dbo].[NG_DPL_Exception]    Script Date: 7/8/2024 3:56:19 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[NG_DPL_Exception]
    @sProcessinstanceid VARCHAR(63),
    @sActivityName NVARCHAR(50)
AS
BEGIN
    SET NOCOUNT ON;
    SET XACT_ABORT ON; -- Automatically roll back the transaction if an error occurs

    DECLARE
        @SQL NVARCHAR(4000),
        @LoopCounter INT,
        @counter NVARCHAR(50),
        @CurrWSName NVARCHAR(255),
        @return NVARCHAR(50),
        @Processinstanceid NVARCHAR(255),
        @ActivityName NVARCHAR(255),
        @LoopCounterForParentWI INT;

    BEGIN TRANSACTION;

    BEGIN TRY
        -- Initial logging
        INSERT INTO ng_audit(col1, col2, col3) VALUES ('ng_DPL_ChildStatus Line 20', @sProcessinstanceid, @sActivityName);
        RAISERROR('@sActivityName: %s', 0, 1, @sActivityName) WITH NOWAIT;
        RAISERROR('@sProcessinstanceid: %s', 0, 1, @sProcessinstanceid) WITH NOWAIT;

        INSERT INTO ng_audit(col1, col2, col3) VALUES ('ng_DPL_ChildStatus @sActivityName', @sProcessinstanceid, @sActivityName);

        IF (@sActivityName = 'Error_Handling')
        BEGIN
            INSERT INTO ng_audit(col1, col2, col3) VALUES('Inside If Condition', @sProcessinstanceid, 'line 37');

            SELECT @LoopCounter = ISNULL(Notify_Counter, 0) 
            FROM NG_DPL_EXTTABLE WITH (NOLOCK) 
            WHERE winame = @sProcessinstanceid;

            INSERT INTO ng_audit(col1, col2, col3) VALUES('after select statement for LoopCounter', @sProcessinstanceid, CONCAT('LoopCounter ', @LoopCounter));

            IF (@LoopCounter < 6)
            BEGIN
                INSERT INTO ng_audit(col1, col2, col3) VALUES('ng_DPL_exception', @sProcessinstanceid, 'Inside Counter for NOTIFY');

                INSERT INTO NG_DPL_GR_DECISION_HISTORY(WI_NAME, Decision, Decision_Date_Time, Workstep, UserName, Remarks) 
                VALUES (@sProcessinstanceid, 'Try Again', GETDATE(), 'Error Handling', 'System', 'Retry for Notify');

                UPDATE NG_DPL_EXTTABLE 
                SET Decision = 'Try Again' 
                WHERE WINAME = @sProcessinstanceid;

                -- Correctly form the dynamic SQL statement
                SET @SQL = N'UPDATE WFINSTRUMENTTABLE SET ValidTill = DATEADD(second, 10, GETDATE()) WHERE ProcessInstanceID = @ProcessInstanceID AND workitemId = 1;';
                RAISERROR('SQL UPDATE: %s', 0, 1, @SQL) WITH NOWAIT;

                INSERT INTO ng_audit(col1, col2, col3) VALUES('Inside update statement exception', @sProcessinstanceid, @SQL);

                -- Execute the dynamic SQL with parameter
                EXEC sp_executesql @SQL, N'@ProcessInstanceID VARCHAR(63)', @ProcessInstanceID = @sProcessinstanceid;

                INSERT INTO ng_audit(col1, col2, col3) VALUES('Inside update statement exception', @sProcessinstanceid, 'Valid till set');
                RAISERROR('Inside update statement Notify_DEH', 0, 1) WITH NOWAIT;

                SET @return = 'ParentMovedToNotify';
            END
        END IF;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;

        -- Log the error details
        INSERT INTO ng_audit(col1, col2, col3) VALUES('Error in Error_Handling block', @sProcessinstanceid, ERROR_MESSAGE());
        INSERT INTO DB_Errors (UserName, ErrorNumber, ErrorState, ErrorSeverity, ErrorLine, ErrorProcedure, ErrorMessage, ErrorDateTime)
        VALUES (SUSER_SNAME(), ERROR_NUMBER(), ERROR_STATE(), ERROR_SEVERITY(), ERROR_LINE(), ERROR_PROCEDURE(), ERROR_MESSAGE(), GETDATE());

        -- Re-raise the error
        RAISERROR('Error: %s', 16, 1, ERROR_MESSAGE()) WITH NOWAIT;
    END CATCH

    SELECT @return AS ChildStatus;
END


exec NG_DPL_Exception 'DigitalPL-0000000838-process', 'Error_Handling'