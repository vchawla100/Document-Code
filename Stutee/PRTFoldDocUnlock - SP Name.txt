USE [rakbankdi]
GO

/****** Object:  StoredProcedure [dbo].[PRTFoldDocUnlock]    Script Date: 14/06/2024 04:02:49 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/******************************************************************************************************
			NEWGEN SOFTWARE TECHNOLOGIES LIMITED
Group			: Application-Products
Product / Project	: Java Transaction Server	
Module			: PanRemote
File Name		: PRTFoldDocUnlock.sql
Author			: Shikhar Prawesh
Date written		: 08/02/2005
Description		: Unlocks the folder(s) and/or document(s) whose maximum locking time has elapsed
---------------------------------------------------------------------------
		CHANGE HISTORY
---------------------------------------------------------------------------
 Date		Change By		Change Description (Bug No. If Any)
----------------------------------------------------------------------------
 Function Name 	: PRTFoldDocUnlock
 Date written	: 08/02/2005
 Author		: Shikhar Prawesh
 Input parameter	:
 Output parameter	:
 Return value(Result set) :Return Status
*******************************************************************************************************/
CREATE PROCEDURE [dbo].[PRTFoldDocUnlock]
(
	@DBFolDuration		int,
	@DBDocDuration		int,
	@DBStatus			int OUT
)
AS
	SET NOCOUNT ON
	DECLARE @CurentDate	datetime
	DECLARE @lFoldDocFlag	char(1)
	DECLARE @lFoldDocIndex	int
	DECLARE @DBConnectId	int
	DECLARE @HostName	varchar(30)


	SELECT 	@CurentDate	= GETDATE()
	SELECT 	@DBConnectId    = -1111111111
	SELECT 	@HostName	= 'LockUnlock'
	SELECT 	@DBStatus 	= 0

	WHILE EXISTS(
		SELECT 1 FROM PDBConnection WHERE RANDOMNUMBER = @DBConnectId
	)
		SELECT 	@DBConnectId = @DBConnectId + 1

	INSERT INTO PDBConnection(RandomNumber, UserIndex, HostName, UserLoginTime, MainGroupId, UserType, 
		AccessDateTime, StatusFlag) 
	VALUES(@DBConnectId, 1, @HostName, @CurentDate, 0, 'S', @CurentDate, 'Y')


	SELECT @DBStatus = @@ERROR
	IF @DBStatus <> 0
	BEGIN
		SELECT 	Status = @DBStatus 
		RETURN
	END

	DELETE FROM PDBFoldDocLockStatus 
	WHERE  FoldDocFlag = 'F'
	AND NOT EXISTS(
		SELECT 1 FROM PDBFolder 
		WHERE  PDBFoldDocLockStatus.FoldDocIndex =  PDBFolder.FolderIndex
	)

	SELECT @DBStatus = @@ERROR
	IF @DBStatus <> 0
	BEGIN
		SELECT 	Status = @DBStatus 
		RETURN
	END

	DELETE FROM PDBFoldDocLockStatus 
	WHERE  FoldDocFlag = 'D'
	AND NOT EXISTS(
		SELECT 1 FROM PDBDocument
		WHERE  PDBFoldDocLockStatus.FoldDocIndex =  PDBDocument.DocumentIndex
	)
	SELECT @DBStatus = @@ERROR
	IF @DBStatus <> 0
	BEGIN
		SELECT 	Status = @DBStatus 
		RETURN
	END

	DECLARE LockCur CURSOR FAST_FORWARD FOR 
		SELECT FoldDocFlag, FoldDocIndex 
		FROM PDBFoldDocLockStatus 
		WHERE DATEDIFF(MI, LockedDateTime, @CurentDate) > @DBFolDuration
		AND	  FoldDocFlag = 'F'		

	OPEN LockCur
	FETCH NEXT FROM LockCur INTO @lFoldDocFlag, @lFoldDocIndex
	WHILE @@FETCH_STATUS <> -1
	BEGIN
		IF @@FETCH_STATUS <> -2
		BEGIN
			EXEC PRTProcessLocks @DBConnectId, @HostName, NULL, 0, 'N', @lFoldDocFlag, @lFoldDocIndex, NULL
		END
		FETCH NEXT FROM LockCur INTO @lFoldDocFlag, @lFoldDocIndex
	END
	CLOSE 		LockCur
	DEALLOCATE 	LockCur

	DECLARE LockCur CURSOR FAST_FORWARD FOR 
		SELECT FoldDocFlag, FoldDocIndex 
		FROM PDBFoldDocLockStatus 
		WHERE DATEDIFF(MI, LockedDateTime, @CurentDate) > @DBDocDuration
		AND	  FoldDocFlag = 'D'		

	OPEN LockCur
	FETCH NEXT FROM LockCur INTO @lFoldDocFlag, @lFoldDocIndex
	WHILE @@FETCH_STATUS <> -1
	BEGIN
		IF @@FETCH_STATUS <> -2
		BEGIN
			EXEC PRTProcessLocks @DBConnectId, @HostName, NULL, 0, 'N', @lFoldDocFlag, @lFoldDocIndex, NULL
		END
		FETCH NEXT FROM LockCur INTO @lFoldDocFlag, @lFoldDocIndex
	END
	CLOSE 		LockCur
	DEALLOCATE 	LockCur
	
	DELETE FROM PDBConnection WHERE RandomNumber = @DBConnectId

GO


